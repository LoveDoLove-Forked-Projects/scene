apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.miniSdkVersion
    }
    resourcePrefix 'scene_'

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation APPCOMPAT_LIB
    implementation DESIGN_LIB
    api project(path: ':library:scene')
    api project(path: ':library:scene_navigation')

    testImplementation ROBOLECTRIC
    testImplementation JUNIT
    testImplementation project(':library:scene_ui')
    testAnnotationProcessor AUTO_SERVICE
    testCompileOnly AUTO_SERVICE
}

tasks.withType(Test) {
    testLogging {
        events "failed"
    }

    afterSuite { desc, result ->
        if (!desc.parent)
            println("${result.resultType} " +
                    "(${result.testCount} tests, " +
                    "${result.successfulTestCount} successes, " +
                    "${result.failedTestCount} failures, " +
                    "${result.skippedTestCount} skipped)")
    }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../javadoc/scene_ui/")
    failOnError false
    title = null

    options {
        doclet = "com.google.doclava.Doclava"
        docletpath(new File(project.rootDir, "tools/doclava-1.0.6.jar"))
        locale "en_US"
        encoding "UTF-8"
    }
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.bytedance.scene'
                artifactId = 'scene_ui'
                version = '1.3.0'
            }
        }
    }
}